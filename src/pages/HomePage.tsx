import React, { useEffect, useState } from 'react';
import { Link } from 'react-router-dom';
import styled from 'styled-components';
import { getCategories, getCategoriesByType, getAllProducts } from '../api';
import { Category, Product } from '../types';
import CategoryCard from '../components/CategoryCard';
import ProductCard from '../components/ProductCard';

const Hero = styled.section`
  background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('/images/hero-bg.jpg');
  background-size: cover;
  background-position: center;
  padding: 5rem 1rem;
  color: var(--white);
  text-align: center;
`;

const HeroTitle = styled.h1`
  font-size: 3rem;
  margin-bottom: 1rem;
  
  @media (max-width: 768px) {
    font-size: 2rem;
  }
`;

const HeroSubtitle = styled.p`
  font-size: 1.2rem;
  max-width: 600px;
  margin: 0 auto 2rem;
  
  @media (max-width: 768px) {
    font-size: 1rem;
  }
`;

const HeroButton = styled(Link)`
  display: inline-block;
  background-color: var(--secondary-color);
  color: var(--white);
  padding: 0.75rem 2rem;
  border-radius: 4px;
  font-size: 1.1rem;
  font-weight: 500;
  transition: background-color 0.3s ease;
  
  &:hover {
    background-color: rgba(255, 107, 0, 0.8);
  }
`;

const Section = styled.section`
  padding: 4rem 0;
`;

const SectionTitle = styled.h2`
  font-size: 2rem;
  text-align: center;
  margin-bottom: 3rem;
  position: relative;
  
  &:after {
    content: '';
    display: block;
    width: 100px;
    height: 3px;
    background-color: var(--secondary-color);
    margin: 0.5rem auto 0;
  }
`;

const SubSectionTitle = styled.h3`
  font-size: 1.5rem;
  margin-bottom: 2rem;
  color: var(--primary-color);
  position: relative;
  
  &:after {
    content: '';
    display: block;
    width: 60px;
    height: 2px;
    background-color: var(--secondary-color);
    margin: 0.5rem 0 0;
  }
`;

const Grid = styled.div`
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 2rem;
  margin-bottom: 3rem;
  
  @media (max-width: 1024px) {
    grid-template-columns: repeat(3, 1fr);
  }
  
  @media (max-width: 768px) {
    grid-template-columns: repeat(2, 1fr);
  }
  
  @media (max-width: 480px) {
    grid-template-columns: 1fr;
  }
`;

const MoreLink = styled(Link)`
  display: block;
  text-align: center;
  margin-top: 2rem;
  font-weight: 500;
  color: var(--primary-color);
  
  &:hover {
    text-decoration: underline;
  }
`;

const Features = styled.div`
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 2rem;
  
  @media (max-width: 768px) {
    grid-template-columns: 1fr;
  }
`;

const FeatureItem = styled.div`
  text-align: center;
  padding: 2rem;
  background-color: var(--white);
  border-radius: 8px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s ease;
  
  &:hover {
    transform: translateY(-10px);
  }
`;

const FeatureIcon = styled.div`
  font-size: 3rem;
  margin-bottom: 1rem;
  color: var(--primary-color);
`;

const FeatureTitle = styled.h3`
  font-size: 1.2rem;
  margin-bottom: 1rem;
`;

const FeatureText = styled.p`
  color: var(--dark-gray);
`;

const ServiceCategory = styled.div`
  margin-bottom: 4rem;
`;

const HomePage: React.FC = () => {
  const [printCategories, setPrintCategories] = useState<Category[]>([]);
  const [designCategories, setDesignCategories] = useState<Category[]>([]);
  const [featuredProducts, setFeaturedProducts] = useState<Product[]>([]);
  const [isLoading, setIsLoading] = useState(true);
  
  useEffect(() => {
    const fetchData = async () => {
      try {
        const [printCategoriesData, designCategoriesData, productsData] = await Promise.all([
          getCategoriesByType('–ü–µ—á–∞—Ç—å'),
          getCategoriesByType('–î–∏–∑–∞–π–Ω'),
          getAllProducts()
        ]);
        
        setPrintCategories(printCategoriesData);
        setDesignCategories(designCategoriesData);
        // –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ—Ç–±–æ—Ä–∞ "featured" –ø—Ä–æ–¥—É–∫—Ç–æ–≤
        setFeaturedProducts(productsData.slice(0, 4));
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö:', error);
      } finally {
        setIsLoading(false);
      }
    };
    
    fetchData();
  }, []);
  
  return (
    <div>
      <Hero>
        <HeroTitle>–°—Ç—É–¥–∏—è –¥–∏–∑–∞–π–Ω–∞ –∏ –ø–µ—á–∞—Ç–∏ "300—Ç–æ—á–µ–∫"</HeroTitle>
        <HeroSubtitle>
          –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —à–∏—Ä–æ–∫–∏–π —Å–ø–µ–∫—Ç—Ä —É—Å–ª—É–≥ –ø–æ –¥–∏–∑–∞–π–Ω—É –∏ –ø–µ—á–∞—Ç–∏ —Ä–µ–∫–ª–∞–º–Ω–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏
          –≤—ã—Å–æ–∫–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞ –ø–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º —Ü–µ–Ω–∞–º
        </HeroSubtitle>
        <HeroButton to="/catalog">–ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥</HeroButton>
      </Hero>
      
      <div className="container">
        <Section>
          <SectionTitle>–ù–∞—à–∏ —É—Å–ª—É–≥–∏</SectionTitle>
          
          {isLoading ? (
            <p className="text-center">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
          ) : (
            <>
              <ServiceCategory>
                <SubSectionTitle>–ü–µ—á–∞—Ç—å</SubSectionTitle>
                <Grid>
                  {printCategories.map(category => (
                    <CategoryCard key={category.id} category={category} />
                  ))}
                </Grid>
              </ServiceCategory>
              
              <ServiceCategory>
                <SubSectionTitle>–î–∏–∑–∞–π–Ω</SubSectionTitle>
                <Grid>
                  {designCategories.map(category => (
                    <CategoryCard key={category.id} category={category} />
                  ))}
                </Grid>
              </ServiceCategory>
              
              <MoreLink to="/catalog">–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —É—Å–ª—É–≥–∏</MoreLink>
            </>
          )}
        </Section>
        
        <Section>
          <SectionTitle>–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã</SectionTitle>
          
          {isLoading ? (
            <p className="text-center">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
          ) : (
            <>
              <Grid>
                {featuredProducts.map(product => (
                  <ProductCard key={product.id} product={product} />
                ))}
              </Grid>
              <MoreLink to="/catalog">–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–µ—Å—å –∫–∞—Ç–∞–ª–æ–≥</MoreLink>
            </>
          )}
        </Section>
        
        <Section>
          <SectionTitle>–ü–æ—á–µ–º—É –º—ã?</SectionTitle>
          
          <Features>
            <FeatureItem>
              <FeatureIcon>‚ö°</FeatureIcon>
              <FeatureTitle>–ë—ã—Å—Ç—Ä–æ–µ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ</FeatureTitle>
              <FeatureText>
                –ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –≤ –∫—Ä–∞—Ç—á–∞–π—à–∏–µ —Å—Ä–æ–∫–∏ –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ –∫–∞—á–µ—Å—Ç–≤–∞
              </FeatureText>
            </FeatureItem>
            
            <FeatureItem>
              <FeatureIcon>üõ°Ô∏è</FeatureIcon>
              <FeatureTitle>–ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞</FeatureTitle>
              <FeatureText>
                –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –∏ –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
              </FeatureText>
            </FeatureItem>
            
            <FeatureItem>
              <FeatureIcon>üí∞</FeatureIcon>
              <FeatureTitle>–ì–∏–±–∫–∏–µ —Ü–µ–Ω—ã</FeatureTitle>
              <FeatureText>
                –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –∫–∞–∂–¥–æ–º—É –∫–ª–∏–µ–Ω—Ç—É –∏ –≥–∏–±–∫–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å–∫–∏–¥–æ–∫ –ø—Ä–∏ –±–æ–ª—å—à–∏—Ö —Ç–∏—Ä–∞–∂–∞—Ö
              </FeatureText>
            </FeatureItem>
          </Features>
        </Section>
      </div>
    </div>
  );
};

export default HomePage; 